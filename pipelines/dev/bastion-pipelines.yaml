trigger:
  branches:
    include:
      - main
  paths:
    include:
      - CRM_Project/pipelines/dev/bastion-pipelines.yaml

variables:
  azureServiceConnection: 'CRM'
  terraformRelativePath: 'environments/dev'
  env: 'dev'

stages:
  - stage: Bastion
    displayName: 'Terraform: Dev Bastion'
    jobs:
      - job: Bastion
        pool:
          name: 'CRM'
        steps:
          - checkout: self
            submodules: true

          - task: AzureCLI@2
            displayName: 'Terraform Init, Plan & Apply Bastion'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -e

                # Set Azure subscription & tenant from service connection
                export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
                export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

                TF_DIR=$(System.DefaultWorkingDirectory)/$(terraformRelativePath)

                # Terraform Init
                terraform -chdir=$TF_DIR init -upgrade

                # Terraform Plan
                terraform -chdir=$TF_DIR plan -out=tfplan \
                  -var="deploy_network=true" \
                  -var="deploy_dns=true" \
                  -var="deploy_aks=true" \
                  -var="deploy_node_pool=true" \
                  -var="deploy_acr=true" \
                  -var="deploy_aks_acr_binding=true" \
                  -var="deploy_bastion=true" \
                  -var="deploy_keyvault=true" \
                  -var="deploy_keyvault_role_assigment=true" \
                  -var="env=$(env)" \
                  -var-file="aks.tfvars" \
                  -var-file="dns-zones.tfvars" \
                  -var-file="network.tfvars" \
                  -var-file="aks-node-pools.tfvars" \
                  -var-file="acr.tfvars" \
                  -var-file="bastion.tfvars" \
                  -var-file="keyvault.tfvars"

                # Terraform Apply
                terraform -chdir=$TF_DIR apply -auto-approve tfplan
